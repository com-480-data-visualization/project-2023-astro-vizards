{"version":3,"file":"static/js/7165.1a01dc02.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/ElevationTile.js","../node_modules/@arcgis/core/layers/support/ElevationQuery.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as a,isNone as t}from\"../../core/maybe.js\";import{ElevationSamplerData as e}from\"./ElevationSamplerData.js\";class r{constructor(t,r=null){if(this.tile=t,a(r)&&a(t)){const a=t.extent;this._samplerData=new e(r,a)}}get zmin(){return a(this._samplerData)?this._samplerData.data.minValue:0}get zmax(){return a(this._samplerData)?this._samplerData.data.maxValue:0}sample(a,e){if(t(this._samplerData))return;const{safeWidth:r,data:i,dx:l,dy:m,y1:n,x0:o}=this._samplerData,{width:h,values:p,noDataValue:u}=i,f=s(m*(n-e),0,r),D=s(l*(a-o),0,r),c=Math.floor(f),d=Math.floor(D),_=c*h+d,x=_+h,y=p[_],V=p[x],g=p[_+1],j=p[x+1];if(y!==u&&V!==u&&g!==u&&j!==u){const a=D-d,t=y+(g-y)*a;return t+(V+(j-V)*a-t)*(f-c)}}}function s(a,t,e){return a<t?t:a>e?e:a}export{r as ElevationTile};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{assertIsSome as i,isNone as s,isSome as n}from\"../../core/maybe.js\";import{whenOrAbort as o,throwIfAbortError as l,eachAlways as a}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as r}from\"../../core/unitUtils.js\";import c from\"../../geometry/Multipoint.js\";import u from\"../../geometry/Point.js\";import h from\"../../geometry/Polyline.js\";import{initializeProjection as p,project as m}from\"../../geometry/projection.js\";import{fromExtent as f,create as d,contains as y}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as T}from\"./ElevationSampler.js\";import{ElevationTile as v}from\"./ElevationTile.js\";import{TileKey as w}from\"./TileKey.js\";class g{async queryAll(e,i,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const n=x.fromGeometry(i);let o=!1;s&&s.returnSampleInfo||(o=!0);const l={...A,...s,returnSampleInfo:!0},a=await this.query(e[e.length-1],n,l),r=await this._queryAllContinue(e,a,l);return r.geometry=r.geometry.export(),o&&delete r.sampleInfo,r}async query(e,i,s){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof x)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const n={...A,...s},o=new R(e,i.spatialReference,n),l=n.signal;return await e.load({signal:l}),await this._createGeometryDescriptor(o,i,l),await this._selectTiles(o,l),await this._populateElevationTiles(o,l),this._sampleGeometryWithElevation(o),this._createQueryResult(o,l)}async createSampler(e,i,s){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const n={...A,...s};return this._createSampler(e,i,n)}async createSamplerAll(e,i,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const n={...A,...s,returnSampleInfo:!0},o=await this._createSampler(e[e.length-1],i,n);return this._createSamplerAllContinue(e,i,o,n)}async _createSampler(e,t,i,s){const n=i.signal;await e.load({signal:n});const o=t.spatialReference,l=e.tileInfo.spatialReference;o.equals(l)||(await p([{source:o,dest:l}],{signal:n}),t=m(t,l));const a=new q(e,t,i,s);return await this._selectTiles(a,n),await this._populateElevationTiles(a,n),new T(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,s){if(e.pop(),!e.length)return i;const n=i.samplers.map((e=>f(e.extent))),o=await this._createSampler(e[e.length-1],t,s,n);if(0===o.samplers.length)return i;const l=i.samplers.concat(o.samplers),a=new T(l,s.noDataValue);return this._createSamplerAllContinue(e,t,a,s)}async _queryAllContinue(e,t,s){const n=e.pop(),o=t.geometry.coordinates,l=t.sampleInfo;i(l);const a=[],r=[];for(let i=0;i<o.length;i++){const t=l[i];t.demResolution>=0?t.source||(t.source=n):e.length&&(a.push(o[i]),r.push(i))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,s),h=u.sampleInfo;if(!h)throw new Error(\"no sampleInfo\");return r.forEach(((e,t)=>{o[e].z=u.geometry.coordinates[t].z,l[e].demResolution=h[t].demResolution})),this._queryAllContinue(e,t,s)}async _createQueryResult(e,t){const s=await e.geometry.project(e.outSpatialReference,t);i(s);const n={geometry:s.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(n.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),n}async _createGeometryDescriptor(e,i,s){let n;const o=e.layer.tileInfo.spatialReference;if(i instanceof x?n=await i.project(o,s):(await p([{source:i.spatialReference,dest:o}],{signal:s}),n=m(i,o)),!n)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${o.wkid}'`);e.geometry=x.fromGeometry(n)}async _selectTiles(e,i){const s=e.options.demResolution;if(\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e),\"number\"==typeof s)this._selectTilesClosestResolution(e);else if(\"finest-contiguous\"===s)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==s)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${s}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(s(e.layer.fullExtent))return;const t=new v(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const s=e.x,n=e.y;(s<i.xmin||s>i.xmax||n<i.ymin||n>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/r(e.spatialReference);let s=e.lods[0],n=0;for(let o=1;o<e.lods.length;o++){const t=e.lods[o];Math.abs(t.resolution-i)<Math.abs(s.resolution-i)&&(s=t,n=o)}return n}async _selectTilesFinestContiguous(e,t){const i=I(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,i,s){const n=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=n.tilemapCache,r=e.getTilesToFetch();try{if(a)await o(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:s})))),s);else if(await this._populateElevationTiles(e,s),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,s)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),s={},l=e.options.cache,r=e.options.noDataValue,c=i.map((async i=>{if(null==i.id)return;const o=`${e.layer.uid}:${i.id}:${r}`,a=n(l)?l.get(o):null,c=n(a)?a:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:r,signal:t});n(l)&&l.put(o,c),s[i.id]=new v(i,c)}));await o(a(c),t),e.populateElevationTiles(s)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const s=t.layer.tilemapCache;if(!s)return this._selectTilesAutoPrefetchUpsample(t,i);const n=t.getTilesToFetch(),a={},r=n.map((async t=>{const n=new w(null,0,0,0,d()),o=await e(s.fetchAvailabilityUpsample(t.level,t.row,t.col,n,{signal:i}));!1!==o.ok?null!=t.id&&(a[t.id]=n):l(o.error)}));await o(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const s={},n=e=>{null!=e.id&&(e.id in s?s[e.id]++:(s[e.id]=1,i++))},o=e=>{if(null==e.id)return;const t=s[e.id];1===t?(delete s[e.id],i--):s[e.id]=t-1};e.forEachTileToFetch(n,o);let l=!0;for(;l&&(l=!1,e.forEachTileToFetch((s=>{i<=e.options.maximumAutoTileRequests||(o(s),t.upsampleTile(s)&&(l=!0),n(s))}),o),l););}_selectTilesAutoFinest(e){const t=I(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let s=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?s=!0:t()})),s&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);n(e)?s=e:t.elevationTile=null}t.z=s}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=r(t.spatialReference);return e.geometry.coordinates.map((s=>{let n=-1;if(s.elevationTile&&s.elevationTile!==e.outsideExtentTile){n=t.lodAt(s.elevationTile.tile.level).resolution*i}return{demResolution:n}}))}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await p([{source:this.spatialReference,dest:e}],{signal:t});const i=new c({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),s=m(i,e);if(!s)return null;const n=this.coordinates.map(((e,t)=>{const i=e.clone(),n=s.points[t];return i.x=n[0],i.y=n[1],i})),o=this.clone(n);return o.spatialReference=e,o}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const s=e.clone(t);return s.spatialReference=i,s};else switch(e.type){case\"point\":{const i=e,{hasZ:s,hasM:n}=i;t.coordinates=s&&n?[new _(i.x,i.y,i.z,i.m)]:s?[new _(i.x,i.y,i.z)]:n?[new _(i.x,i.y,null,i.m)]:[new _(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new u(t[0].x,t[0].y,t[0].z,t[0].m,i):new u(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:s,hasM:n}=i;t.coordinates=s&&n?i.points.map((e=>new _(e[0],e[1],e[2],e[3]))):s?i.points.map((e=>new _(e[0],e[1],e[2]))):n?i.points.map((e=>new _(e[0],e[1],null,e[2]))):i.points.map((e=>new _(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new c({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new c(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,s=[],n=[],{hasZ:o,hasM:l}=e;let a=0;for(const e of i.paths)if(n.push([a,a+e.length]),a+=e.length,o&&l)for(const t of e)s.push(new _(t[0],t[1],t[2],t[3]));else if(o)for(const t of e)s.push(new _(t[0],t[1],t[2]));else if(l)for(const t of e)s.push(new _(t[0],t[1],null,t[2]));else for(const t of e)s.push(new _(t[0],t[1]));t.coordinates=s,t._exporter=(t,i)=>{const s=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),o=n.map((e=>s.slice(e[0],e[1])));return new h({paths:o,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class _{constructor(e,t,i=null,s=null,n=null,o=null){this.x=e,this.y=t,this.z=i,this.m=s,this.tile=n,this.elevationTile=o}clone(){return new _(this.x,this.y,this.z,this.m)}}class E{constructor(e,t){this.layer=e,this.options=t}}class R extends E{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>{e.tile=null}));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const s=i.tile;if(!s)continue;const n=i.tile?.id;i.elevationTile||!n||e[n]||(e[n]=s,t.push(s))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class q extends E{constructor(e,t,i,s){super(e,i),this.type=\"extent\",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=s}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),s=Math.min(i,e);s<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(s)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;if(s(i))return-1;for(let s=t.lods.length-1;s>=0;s--){const n=t.lods[s],o=n.resolution*t.size[0],l=n.resolution*t.size[1];if(Math.ceil(i.width/o)*Math.ceil(i.height/l)<=e)return s}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let s=!1;e(i,(()=>s=!0)),s?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},s=[];for(const o of e){const e=o.id;e&&!i[e]?(i[e]=o,s.push(o)):t&&t(o)}const n=s.sort(((e,t)=>e.level-t.level));return n.filter(((e,i)=>{for(let s=0;s<i;s++){const i=n[s].extent;if(i&&e.extent&&y(i,e.extent))return t&&t(e),!1}return!0}))}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(s(t))return;const i=this.layer.tileInfo,n=i.lods[e],o=i.tileAt(n.level,t.xmin,t.ymin),l=o.extent;if(s(l))return;const a=n.resolution*i.size[0],r=n.resolution*i.size[1],c=Math.ceil((t.xmax-l[0])/a),u=Math.ceil((t.ymax-l[1])/r);for(let s=0;s<u;s++)for(let e=0;e<c;e++){const t=new w(null,o.level,o.row-s,o.col+e);i.updateTileInfo(t),this._tileIsMasked(t)||this._candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&y(t,e.extent)))}}function I(e,t=0){let i=e.lods.length-1;if(t>0){const s=t/r(e.spatialReference),n=e.lods.findIndex((e=>e.resolution<s));0===n?i=0:n>0&&(i=n-1)}return i}const A={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};export{g as ElevationQuery,x as GeometryDescriptor,I as getFinestLodIndex};\n"],"names":["r","t","arguments","length","undefined","_classCallCheck","this","tile","a","extent","_samplerData","e","_createClass","key","get","data","minValue","maxValue","value","_this$_samplerData","safeWidth","i","l","dx","m","dy","n","y1","o","x0","h","width","p","values","u","noDataValue","f","s","D","c","Math","floor","d","_","x","y","V","g","j","_queryAll","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","ignoreInvisibleLayers","filter","visible","slice","fromGeometry","returnSampleInfo","_objectSpread","A","query","sent","_queryAllContinue","abrupt","geometry","export","sampleInfo","stop","_x","_x2","_x3","apply","_query","_callee2","_context2","type","R","spatialReference","signal","load","_createGeometryDescriptor","_selectTiles","_populateElevationTiles","_sampleGeometryWithElevation","_createQueryResult","_x4","_x5","_x6","_createSampler2","_callee3","_context3","_createSampler","_x7","_x8","_x9","_createSamplerAll","_callee4","_context4","_createSamplerAllContinue","_x10","_x11","_x12","_createSampler3","_callee5","_context5","tileInfo","t0","equals","source","dest","q","T","elevationTiles","layer","options","_x13","_x14","_x15","_x16","_createSamplerAllContinue2","_callee6","_context6","pop","samplers","map","concat","_x17","_x18","_x19","_x20","_queryAllContinue2","_callee7","_i","_t","_context7","coordinates","demResolution","push","clone","Error","forEach","z","_x21","_x22","_x23","_createQueryResult2","_callee8","_context8","project","outSpatialReference","_extractSampleInfo","elevationTile","_x24","_x25","_createGeometryDescriptor2","_callee9","_context9","wkid","_x26","_x27","_x28","_selectTiles2","_callee10","_context10","_preselectOutsideLayerExtent","_selectTilesClosestResolution","_selectTilesFinestContiguous","_selectTilesAuto","_x29","_x30","fullExtent","v","sample","outsideExtentTile","xmin","xmax","ymin","ymax","_findNearestDemResolutionLODIndex","selectTilesAtLOD","lods","abs","resolution","_selectTilesFinestContiguous2","_callee11","_context11","I","minDemResolution","_selectTilesFinestContiguousAt","_x31","_x32","_selectTilesFinestContiguousAt2","_callee12","_context12","tilemapCache","getTilesToFetch","Promise","all","fetchAvailability","level","row","col","allElevationTilesFetched","clearElevationTiles","_x33","_x34","_x35","_populateElevationTiles2","_callee14","_context14","cache","_ref","_callee13","_context13","id","uid","fetchTile","put","_x38","populateElevationTiles","_x36","_x37","_selectTilesAuto2","_callee16","_context16","_selectTilesAutoFinest","_reduceTilesForMaximumRequests","_selectTilesAutoPrefetchUpsample","_ref2","_callee15","_context15","w","fetchAvailabilityUpsample","ok","error","_x41","remapTiles","_x39","_x40","forEachTileToFetch","maximumAutoTileRequests","upsampleTile","_selectTilesAutoPrefetchUpsample2","_callee17","_context17","_x42","_x43","lodAt","_exporter","_project","_callee18","_context18","points","_x44","_x45","hasZ","hasM","spatiaReference","_step","_iterator","_createForOfIteratorHelper","paths","done","_step2","_iterator2","err","_step3","_iterator3","_step4","_iterator4","_step5","_iterator5","E","_E","_inherits","_super","_createSuper","_this","call","tileAt","some","_step6","_iterator6","_step7","_iterator7","_t8$tile","_step8","_iterator8","_t9$tile","_step9","_iterator9","_i7$tile","_step10","_iterator10","_loop","_E2","_super2","_this2","_candidateTiles","_fetchedCandidates","Set","intersection","maskExtents","_maximumLodForRequests","min","_selectCandidateTilesCoveringExtentAt","size","ceil","height","clear","_step11","_iterator11","add","_uniqueNonOverlappingTiles","_this3","has","_step12","_iterator12","sort","updateTileInfo","_tileIsMasked","findIndex"],"sourceRoot":""}